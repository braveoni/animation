import{_ as n,o,c as r}from"./index-ddba6b40.js";const d={name:"SphereView",data(){return{size:5,gap:20,mouseGap:7}},methods:{drawPoint(e,s,i,t="black"){e.beginPath(),e.fillStyle=t,e.arc(s,i,this.size,0,Math.PI*2),e.fill(),e.closePath()},drawPoints(e,s){for(let i=0;i<12;i++)switch(!0){case i<6:{this.drawPoint(s,(e.width-this.size)/2-(5-i)*this.gap,(e.height-this.size)/2);break}case i==6:{this.drawPoint(s,(e.width-this.size)/2,(e.height-this.size)/2);break}default:this.drawPoint(s,(e.width-this.size)/2+(i-6)*this.gap,(e.height-this.size)/2)}},drawLine(e,s,i,t="black"){e.beginPath(),e.lineTo(s,i),e.lineWidth=7,e.lineCap="round",e.strokeStyle=t,e.stroke()},drawMousePoint(e,s,i){["A6FF96","F8FF95","BC7AF9","FFA1F5"].forEach((a,h)=>{switch(!0){case h==0:this.drawLine(e,s,i+this.mouseGap,`#${a}`);case h==1:this.drawLine(e,s+this.mouseGap,i,`#${a}`);case h==2:this.drawLine(e,s,i-this.mouseGap,`#${a}`);case h==3:this.drawLine(e,s-this.mouseGap,i,`#${a}`)}})},mouse(e,s){e.addEventListener("mousemove",i=>{this.drawLine(s,i.layerX,i.layerY)})}},mounted(){const e=this.$refs.canvas,s=e.getContext("2d");[e.width,e.height]=[window.innerWidth,window.innerHeight],s.moveTo(0,0),this.drawLine(s,100,100)}},w={id:"sphere",ref:"canvas"};function l(e,s,i,t,a,h){return o(),r("canvas",w,null,512)}const u=n(d,[["render",l]]);export{u as default};
